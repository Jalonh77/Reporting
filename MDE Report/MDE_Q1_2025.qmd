---
title: "MDE Report Q1 2025"
format: html
editor: visual
author: Jalon Howard

last_updated: 04/10/2025
---

## ø. To-Do

## I. Summary

-   **Report Name:** Michigan Department of Education (MDE) Report

-   **Frequency**: Quarterly

-   **Scope**

    -   [Timeframe]{.underline}: Previous quarter [and]{.underline} cumulative to-date

    -   [Population]{.underline}: Schools that launched (i.e had at least one trainee complete a core training type) under 31p2 contract.

-   **Deadline**: 2 weeks following end of Quarter

    -   Q1 2025: April 10

-   **Output Metrics:**

    -   Number of schools implementing TRAILS in any Tier

    -   Number of students who gained access to TRAILS resources and supports 

    -   Number of staff trained by Tier (can be counted duplicatively and cumulatively)

        -   Staff may be counted more than once when participating in more than one tier of programming

-   **Date Sources**

    -   [List of MDE Schools]{.underline} -\> Salesforce Contract Implementations with Account info & Core Training Launch Date filtered where contract contains '31p2' and by appropriate date parameters

    -   [Trainings by Tier]{.underline} -\> Salesforce Training Affiliations filtered by [List of MDE Schools]{.underline}

    -   [Student Access Data]{.underline} -\> [National Center for Education Statistics (NCES) search](https://nces.ed.gov/ccd/schoolsearch/) with the following criteria:

        -   State: "Michigan"

        -   School Description: "Regular, Special Education, Vocational, Other/Alternative"

### Environment

```{r}
library(pacman)
p_load(qualtRics, tidyverse, dplyr, janitor)

dir_in <- '/Users/jalonr77/Documents/Evaluation Projects/Git Projects/Reporting/MDE Report/Data/Raw/'
dir_out <- '/Users/jalonr77/Documents/Evaluation Projects/Git Projects/Reporting/MDE Report/Data/Out/'
```

### Data In

```{r}
# Files In
file_in_sf_affiliations <- paste0(dir_in,'sf_export_affiliations_all_20250410.csv')
file_in_sf_mde_schools <- paste0(dir_in,'sf_export_mde_schools_all_20250410.csv')
file_in_nces_schools <- paste0(dir_in,'ncesdata_schools_mi_20250331.csv')


df_affiliations <- clean_names(read_csv(file_in_sf_affiliations, show_col_types = FALSE))
df_mde_schools <- clean_names(read_csv(file_in_sf_mde_schools, show_col_types = FALSE))
df_nces <- clean_names(read_csv(file_in_nces_schools, show_col_types = FALSE))
```

### Data Out

```{r}

# Auto-update date suffix for file-out names
date_suff <- str_remove_all(as.character(today()), "-")

```

### Other Data Structures

```{r}

# Dictionary of qualifying trainings and corresponding MDE Role
dict_mde_role <- list(
  'SEL Curriculum Training' = 'T1_Staff',
  'SEL Recording + Live Q&A' = 'T1_Staff',
  'SEL Q+A' = 'T1_Staff',
  'SEL Facilitated' = 'T1_Staff',
  'SEL Asynchronous' = 'T1_Staff',
  # Tier 2 SMHP Trainings has different Schedule name different than Training name
  'CBT & Mindfulness Training' = 'T2_SMHP',
  'SMHP CBT Training' = 'T2_SMHP',
  'Suicide Prevention - ISD' = 'T3_Admin', 
  'Suicide Prevention - School Staff' = 'T3_Educator', 
  'Suicide Prevention - SMHP' = 'T3_SMHP', 
  'Suicide Prevention - Community' = 'T3_Community', 
  'Suicide Risk Management Protocol' = 'T3_Both_Admin_SMHP'
)
```

## III. Clean & Wrangle

### Schools

```{r}
df_mde_schools
colnames(df_mde_schools)
```

```{r}
# rename columns
df_mde_schools_wrangled <- df_mde_schools %>%
  select(-c(contract_implementation_contract_implementation_name, account_type)) %>%
  rename(
    school_name = account_account_name,
    entity_code = account_entity_code,
    launch_date_core_trainings = account_core_training_type_launch_date,
    launch_date_all_trainings = account_launch_date,
    launch_iteam_tier1 = account_confirmed_tier_1_launch,
    launch_iteam_tier2 = account_confirmed_tier_2_launch,
    launch_iteam_tier3 = account_confirmed_tier_3_launch
  ) %>%
  mutate(
    launch_date_core_trainings = as.Date(launch_date_core_trainings, format = '%m/%d/%Y'),
    launch_date_all_trainings = as.Date(launch_date_core_trainings, format = '%m/%d/%Y')
  )
  

df_mde_schools_wrangled
```

### Affiliations

```{r}

# Visual Check
df_affiliations
colnames(df_affiliations)

```

```{r}

df_affiliations_wrangled <- df_affiliations %>%
  rename(
    aff_id = name,
    attendance_id = training_attendance_c,
    training_date = training_attendance_r_actual_completion_date,
    completion_status = training_attendance_r_disbursement_status,
    training_name = training_attendance_r_benefit_assignment_benefit_name,
    training_tier = training_attendance_r_program_enrollment_program_tier_c,
    aff_account_id = account_c,
    aff_name = account_r_name,
    aff_entity_code = entity_code_c,
    attendee_account_id = attendee_r_id
  ) %>%
  filter(
    # Training was completed
    !(completion_status %in% c('Scheduled','Absent')),
    # Within Q1 period
    between(training_date, 
            left = date('2025-01-01'), 
            right = date('2025-03-31')),
    # Qualifying training
   training_name %in% names(dict_mde_role) 
  ) %>%
  mutate(
    mde_role = case_when(
        training_name %in% c('SEL Curriculum Training',
                             'SEL Recording + Live Q&A',
                             'SEL Q+A',
                             'SEL Facilitated',
                             'SEL Asynchronous') ~ 'T1_Staff',
        
        # Tier 2 SMHP Trainings has different Schedule name different than Training name
        training_name == 'CBT & Mindfulness Training' ~ 'T2_SMHP',
        training_name == 'SMHP CBT Training' ~ 'T2_SMHP',
        training_name == 'CIT CBT Training' ~ 'T2_CIT',
        
        training_name == 'Suicide Prevention - ISD' ~ 'T3_Admin', 
        training_name == 'Suicide Prevention - School Staff' ~ 'T3_Educator', 
        training_name == 'Suicide Prevention - SMHP' ~ 'T3_SMHP', 
        training_name == 'Suicide Prevention - Community' ~ 'T3_Community', 
        training_name == 'Suicide Risk Management Protocol' ~ 'T3_Both_Admin_SMHP'
    )

  )

df_affiliations_wrangled
```

### NCES School Data

```{r}

df_nces_wrangled <- df_nces %>%
  # Remove NA
  filter(
    !is.na(students)
  ) %>%
  # Update col data type
  mutate(
    students = as.integer(students)
  ) 

df_nces_wrangled
```

## IV. Execute

### Number of Schools Implementing

```{r}

# Group affiliations by school and determine which tiers of programming occured
df_affiliations_grouped_by_account <- df_affiliations_wrangled %>%
  group_by(aff_entity_code) %>%
  summarise(
    is_t1 = sum(training_tier=='Tier 1') > 0,
    is_t2 = sum(training_tier=='Tier 2') > 0,
    is_t3 = sum(training_tier=='Tier 3') > 0,
    n_tiers = sum(as.numeric(c(is_t1,is_t2,is_t3)))
  )


# OUTPUT: Total number of Tier 1 Schools 
n_schools_t1 <- df_affiliations_grouped_by_account %>%
  filter(is_t1) %>%
  nrow()

# OUTPUT: Total number of Tier 2 Schools 
n_schools_t2 <- df_affiliations_grouped_by_account %>%
  filter(is_t2) %>%
  nrow()

# OUTPUT: Total number of Tier 3 Schools 
n_schools_t3 <- df_affiliations_grouped_by_account %>%
  filter(is_t3) %>%
  nrow()

# OUTPUT: Total number of Schools implementing in any tier (Non-duplicative) 
n_schools_total <- nrow(df_affiliations_grouped_by_account)

# Visual Check of DF
df_affiliations_grouped_by_account

# Print Output
cat('Number of Implementing Schools\n',
    'Tier 1: ',n_schools_t1,'\n',
    'Tier 2: ',n_schools_t2,'\n',
    'Tier 3: ',n_schools_t3,'\n',
    'Any Tier: ',n_schools_total,'\n')

```

### Number of Trainees

```{r}

# OUTPUT: Frequeny table of Trainees by type
freq_table_trainees <- table(df_affiliations_wrangled$mde_role)

# OUTPUT: Trainees (Any Tier) | Non-duplicative
n_trainees_total <- length(unique(df_affiliations_wrangled$attendee_account_id))

# Print Output
cat('Number of Trainees\n')

for(x in names(freq_table_trainees))({
  cat(x,': ',freq_table_trainees[x],'\n',sep="")
})

cat('Any Training:',n_trainees_total)
```

### Number of Students Who Gained Access

#### Launched Anytime

```{r}
# List of all MDE Schools
list_mde_schools_all <- unique(df_mde_schools_wrangled$entity_code)
```

```{r}

df_student_access_all <- df_affiliations_wrangled %>%
  # filter selected Tier 3 trainings and MDE Schools
  filter(
    aff_entity_code %in% list_mde_school_codes,
    !training_name %in% c('Suicide Prevention - Community', 'Suicide Prevention - School Staff')
  ) %>%
  group_by(aff_entity_code) %>%
  summarise(
    is_t1 = sum(training_tier=='Tier 1') > 0,
    is_t2 = sum(training_tier=='Tier 2') > 0,
    is_t3 = sum(training_tier=='Tier 3') > 0,
    # Count Trainings implemented in school
    n_tiers = sum(as.numeric(c(is_t1,is_t2,is_t3)))
  ) %>%
  # Join to NCES Data
  inner_join(x=.,
            y=df_nces[c('state_school_id', 'students')],
            by=c('aff_entity_code'= 'state_school_id'),
            na_matches='never') %>%
  mutate(
    students = as.integer(students)
  )

df_student_access_all

# OUTPUT: Tier 1 Student Access
n_t1_reach <- sum(df_student_access_all$students[df_student_access_all$is_t1==TRUE])
# OUTPUT: Tier 2 Student Access
n_t2_reach <- sum(df_student_access_all$students[df_student_access_all$is_t2==TRUE])
# OUTPUT: Tier 3 Student Access
n_t3_reach <- sum(df_student_access_all$students[df_student_access_all$is_t3==TRUE])

# OUTPUT: Overall Reach (Non-Duplicative)
n_reach_total <- sum(df_student_access_all$students)

cat('Student Access\n',
    'Tier 1: ',n_t1_reach,'\n',
    'Tier 2: ',n_t2_reach,'\n',
    'Tier 3: ',n_t3_reach,'\n',
    'Any Tier: ',n_reach_total,'\n')


```

#### Launched Q1 2025

```{r}

# MDE Schools Filtered by Launch in Q1 2025
df_mde_launched_q1_2025 <- df_mde_schools_wrangled %>%
  filter(
    between(launch_date_core_trainings, left = date('2025-01-01'), right = date('2025-03-31')) |
      between(launch_date_all_trainings, left = date('2025-01-01'), right = date('2025-03-31')) |
      grepl(pattern = 'Spring 2025', x = launch_iteam_tier1) |
      grepl(pattern = 'Spring 2025', x = launch_iteam_tier2) |
      grepl(pattern = 'Spring 2025', x = launch_iteam_tier3) 
  ) 

# List of all MDE Schools
list_mde_schools_q1_2025 <- unique(df_mde_launched_q1_2025$entity_code)
```

```{r}
df_student_access_q1_2025 <- df_affiliations_wrangled %>%
  # filter selected Tier 3 trainings and MDE Schools
  filter(
    aff_entity_code %in% list_mde_schools_q1_2025,
    !training_name %in% c('Suicide Prevention - Community', 'Suicide Prevention - School Staff')
  ) %>%
  group_by(aff_entity_code) %>%
  summarise(
    is_t1 = sum(training_tier=='Tier 1') > 0,
    is_t2 = sum(training_tier=='Tier 2') > 0,
    is_t3 = sum(training_tier=='Tier 3') > 0,
    # Count Trainings implemented in school
    n_tiers = sum(as.numeric(c(is_t1,is_t2,is_t3)))
  ) %>%
  # Join to NCES Data
  inner_join(x=.,
            y=df_nces[c('state_school_id', 'students')],
            by=c('aff_entity_code'= 'state_school_id'),
            na_matches='never') %>%
  mutate(
    students = as.integer(students)
  )

df_student_access_q1_2025

# OUTPUT: Tier 1 Student Access
n_t1_reach <- sum(df_student_access_q1_2025$students[df_student_access_q1_2025$is_t1==TRUE])
# OUTPUT: Tier 2 Student Access
n_t2_reach <- sum(df_student_access_q1_2025$students[df_student_access_q1_2025$is_t2==TRUE])
# OUTPUT: Tier 3 Student Access
n_t3_reach <- sum(df_student_access_q1_2025$students[df_student_access_q1_2025$is_t3==TRUE])

# OUTPUT: Overall Reach (Non-Duplicative)
n_reach_total <- sum(df_student_access_q1_2025$students)

cat('Student Access\n',
    'Tier 1: ',n_t1_reach,'\n',
    'Tier 2: ',n_t2_reach,'\n',
    'Tier 3: ',n_t3_reach,'\n',
    'Any Tier: ',n_reach_total,'\n')
```

## V. Finalize & Write Out Data

```{r}

# Trainings by School
write_csv(df_affiliations_grouped_by_account, paste0(dir_out,'mde_schools_',date_suff,'.csv'))

# Wrangled Trainings
write_csv(df_affiliations_wrangled, paste0(dir_out,'mde_trainings_',date_suff,'.csv'))

# Wrangled Student Access
write_csv(df_student_access_grouped, paste0(dir_out,'mde_student_access_',date_suff,'.csv'))

```
